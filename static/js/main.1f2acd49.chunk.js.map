{"version":3,"sources":["components/Filter/Filter.module.css","components/Form.module.css","components/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Form","onSubmit","useState","name","number","state","setState","console","log","nameInputId","shortid","generate","telInputId","handleChange","e","currentTarget","value","prevState","reset","className","styles","form","preventDefault","label","htmlFor","input","type","pattern","title","required","onChange","id","button","memo","ContactsList","contacts","onDeleteContact","length","list","map","item","onClick","defaultProps","Filter","App","setContacts","filter","setFilter","addNewContact","useCallback","newContact","find","contact","toLowerCase","alert","localStorage","setItem","JSON","stringify","useEffect","getItem","parsedContacts","parse","normalizedFilter","includes","getFilteredContacts","contactId","updatedContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2acd49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3uDol\",\"input\":\"Filter_input__PkTCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1hJf0\",\"label\":\"Form_label__1OdUK\",\"input\":\"Form_input__3REiD\",\"button\":\"Form_button__1I_j_\"};","import React, { useState, memo } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [state, setState] = useState({ name: \"\", number: \"\" });\r\n\r\n  console.log(\"RERENDER\");\r\n  const nameInputId = shortid.generate();\r\n  const telInputId = shortid.generate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(state);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label} htmlFor={telInputId}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          id={telInputId}\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default memo(Form);\r\n","import React from \"react\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length === 0 ? (\r\n    <div> No contacts </div>\r\n  ) : (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nContactsList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactsList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = useCallback(\n    ({ name, number }) => {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n      console.log(name, number);\n\n      const alreadyInContacts = contacts.find(\n        (contact) =>\n          newContact.name.toLowerCase() === contact.name.toLowerCase()\n      );\n\n      if (alreadyInContacts) {\n        alert(`${newContact.name} is already in contacts`);\n      } else {\n        setContacts([...contacts, newContact]);\n        localStorage.setItem(\n          \"contacts\",\n          JSON.stringify([...contacts, newContact])\n        );\n      }\n    },\n    [contacts]\n  );\n\n  const deleteContact = (contactId) => {\n    const updatedContact = contacts.filter(\n      (contact) => contact.id !== contactId\n    );\n    setContacts(updatedContact);\n    localStorage.setItem(\"contacts\", JSON.stringify(updatedContact));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={addNewContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={getFilteredContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__Y2frb\",\"item\":\"ContactsList_item__2Mz5d\",\"button\":\"ContactsList_button__CLX0V\"};"],"sourceRoot":""}